<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.emailType="Gmail" this:Main.emailContent="NIL" this:Main.emailTranslate="No" this:Main.emailSubject="NIL" this:Main.ccEmailCheck="NIL" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:zc="clr-namespace:Zell.CognitiveServices;assembly=Zell.CognitiveServices.Activities">
  <x:Members>
    <x:Property Name="excelAttach" Type="InArgument(x:String)" />
    <x:Property Name="emailType" Type="InArgument(x:String)" />
    <x:Property Name="emailContent" Type="InArgument(x:String)" />
    <x:Property Name="emailTranslate" Type="InArgument(x:String)" />
    <x:Property Name="emailTranslatedContent" Type="InArgument(x:String)" />
    <x:Property Name="emailSubject" Type="InArgument(x:String)" />
    <x:Property Name="ccEmailAddress" Type="InArgument(x:String)" />
    <x:Property Name="ccEmailCheck" Type="InArgument(x:String)" />
    <x:Property Name="emailAddress" Type="InArgument(x:String)" />
  </x:Members>
  <this:Main.excelAttach>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.excelAttach>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>758,1108</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="100">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>UiPath.Mail.Exchange</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>Zell.CognitiveServices</x:String>
      <x:String>GASTranslate_Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Web</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPathTeam.InteractiveFormLauncher</x:String>
      <x:String>UiPathTeam.InteractiveFormLauncher.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="70">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>Zell.CognitiveServices.Activities</AssemblyReference>
      <AssemblyReference>GASTranslate.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPathTeam.InteractiveFormLauncher</AssemblyReference>
      <AssemblyReference>UiPathTeam.InteractiveFormLauncher.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="634,1043.33333333333" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="No" Name="emailDetailCheck" />
      <Variable x:TypeArguments="x:String" Name="optionForCc" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">240,2.66666666666666</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">270,77.3333333333333 270,136</av:PointCollection>
        <x:Double x:Key="Height">1007.3333333333333</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID4</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">170,344.333333333333</av:Point>
          <av:Size x:Key="ShapeSize">200,131.333333333333</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">270,475.666666666667 270,551</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Prompt User to choose file for attachment and enter necessary information about the email." Condition="[emailDetailCheck=&quot;No&quot;]" DisplayName="While" sap:VirtualizedContainerService.HintSize="200,131.333333333333" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_11">
        <ui:InterruptibleWhile.Body>
          <Sequence sap:VirtualizedContainerService.HintSize="876,3631.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_46">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:SelectFile DisplayName="Select File" Filter="Excel|*.xlsx;*.xls;*.xlsm;*.xlsb" sap:VirtualizedContainerService.HintSize="834,138.666666666667" sap2010:WorkflowViewState.IdRef="SelectFile_2" SelectedFile="[excelAttach]" />
            <ui:InputDialog Options="{x:Null}" DisplayName="Ask user for Email Type" sap:VirtualizedContainerService.HintSize="834,296" sap2010:WorkflowViewState.IdRef="InputDialog_11" IsPassword="False" Label="Please choose an Email type" OptionsString="Gmail;Outlook" Title="Email Type">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[emailType]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Ask user for Email Address" sap:VirtualizedContainerService.HintSize="834,242" sap2010:WorkflowViewState.IdRef="InputDialog_12" IsPassword="False" Label="Please provide the receiver's email address" Title="Email Address">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[emailAddress]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="834,296" sap2010:WorkflowViewState.IdRef="InputDialog_13" IsPassword="False" Label="Do you wish to cc somebody in your email?" OptionsString="Yes;No" Title="Email CC">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[optionForCc]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <If Condition="[optionForCc=&quot;Yes&quot;]" sap:VirtualizedContainerService.HintSize="834,977.333333333333" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="526,818" sap2010:WorkflowViewState.IdRef="Sequence_43">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="ccEmailCheck" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" sap:VirtualizedContainerService.HintSize="484,242" sap2010:WorkflowViewState.IdRef="InputDialog_14" IsPassword="False" Label="Please provide the Email Address (Seperate with comma (,) if you have multiple CCs)" Title="cc">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="x:String">[ccEmailAddress]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                  <Assign sap:VirtualizedContainerService.HintSize="484,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ccEmailCheck]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ccEmailAddress]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[emailType=&quot;Outlook&quot;]" sap:VirtualizedContainerService.HintSize="484,342.666666666667" sap2010:WorkflowViewState.IdRef="If_7">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,153.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_41">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ccEmailAddress]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ccEmailAddress.Replace(",",";")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_42">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ccEmailCheck]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">NIL</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Ask user for Email Subject" sap:VirtualizedContainerService.HintSize="834,242" sap2010:WorkflowViewState.IdRef="InputDialog_15" IsPassword="False" Label="Please type in the Email Subject" Title="Email Subject">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[emailSubject]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Ask user for Email Content" sap:VirtualizedContainerService.HintSize="834,242" sap2010:WorkflowViewState.IdRef="InputDialog_16" IsPassword="False" Label="Please insert the content of your email." Title="Content">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[emailContent]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ui:InputDialog Options="{x:Null}" DisplayName="Ask user whether to translate Email" sap:VirtualizedContainerService.HintSize="834,296" sap2010:WorkflowViewState.IdRef="InputDialog_17" IsPassword="False" Label="Do you want to translate the content into Mandarin?" OptionsString="Yes;No" Title="Translate">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[emailTranslate]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <If Condition="[emailTranslate = &quot;Yes&quot;]" sap:VirtualizedContainerService.HintSize="834,364.666666666667" sap2010:WorkflowViewState.IdRef="If_9">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="320.666666666667,205.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <zc:TextTranslator ApiKey="{x:Null}" DetectedSourceLanguage="{x:Null}" DisplayName="Text translator" sap:VirtualizedContainerService.HintSize="278.666666666667,113.333333333333" sap2010:WorkflowViewState.IdRef="TextTranslator_2" TargetLanguageCode="zh-Hans" Text="[emailContent]" TranslatedText="[emailTranslatedContent]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[emailTranslatedContent]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[emailContent]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <ui:MessageBox AutoCloseAfter="00:00:00" Buttons="YesNo" Caption="Email Details" ChosenButton="[emailDetailCheck]" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="834,84.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_12" Text="[&quot;Please check the details of you email:&quot;+Environment.NewLine+&quot;Email Type: &quot;+emailType+Environment.NewLine+&quot;Receiver's Email Address: &quot;+emailAddress+Environment.NewLine+&quot;Email Cc: &quot;+ccEmailAddress+Environment.NewLine+&quot;Email Subject: &quot;+emailSubject+Environment.NewLine+&quot;Email Content: &quot;+emailContent+Environment.NewLine+&quot;Email Translate: &quot;+emailTranslate]" />
          </Sequence>
        </ui:InterruptibleWhile.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InterruptibleWhile>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">170,551</av:Point>
              <av:Size x:Key="ShapeSize">200,98</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">270,649 270,711</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If sap2010:Annotation.AnnotationText="Send email based on the type they choose. (Gmail)" Condition="[emailType = &quot;Gmail&quot;]" sap:VirtualizedContainerService.HintSize="200,98" sap2010:WorkflowViewState.IdRef="If_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="552,786" sap2010:WorkflowViewState.IdRef="Sequence_52">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <umab:GmailApplicationCard ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" Account="melvinngweixiang@gmail.com" DisplayName="Use Gmail" EmailAddress="melvinngweixiang@gmail.com" sap:VirtualizedContainerService.HintSize="510,694" sap2010:WorkflowViewState.IdRef="GmailApplicationCard_3" Timeout="90" UseConnectionService="False">
                  <umab:GmailApplicationCard.Body>
                    <ActivityAction x:TypeArguments="um:IMailQuickHandle">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Gmail" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,510" sap2010:WorkflowViewState.IdRef="Sequence_48">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <umab:SendMailX Bcc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Gmail]" Body="[emailTranslatedContent]" BodyType="Text" Cc="[ccEmailAddress]" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,418" sap2010:WorkflowViewState.IdRef="SendMailX_6" Importance="Normal" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="[emailSubject]" To="[emailAddress]" UseDocumentAsBody="False">
                          <umab:SendMailX.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String">[excelAttach]</InArgument>
                            </scg:List>
                          </umab:SendMailX.Files>
                          <umab:SendMailX.HtmlBodyFromFile>
                            <umabh:HtmlContentArgument FilePath="{x:Null}">
                              <umabh:HtmlContentArgument.RuntimeImages>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </umabh:HtmlContentArgument.RuntimeImages>
                              <umabh:HtmlContentArgument.ValueMappings>
                                <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                              </umabh:HtmlContentArgument.ValueMappings>
                            </umabh:HtmlContentArgument>
                          </umab:SendMailX.HtmlBodyFromFile>
                        </umab:SendMailX>
                      </Sequence>
                    </ActivityAction>
                  </umab:GmailApplicationCard.Body>
                  <umab:GmailApplicationCard.ClientId>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </umab:GmailApplicationCard.ClientId>
                  <umab:GmailApplicationCard.ClientSecret>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </umab:GmailApplicationCard.ClientSecret>
                </umab:GmailApplicationCard>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_40">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">170,711</av:Point>
                  <av:Size x:Key="ShapeSize">200,98</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">270,809 270,852.666666666667</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IfElseIf sap2010:Annotation.AnnotationText="Send email based on the type they choose. (Outlook)" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="200,98" sap2010:WorkflowViewState.IdRef="IfElseIf_4">
                <ui:IfElseIf.ConditionBlocks>
                  <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                    <ui:IfElseIfBlock BlockType="If" Condition="[emailType = &quot;Outlook&quot;]">
                      <ui:IfElseIfBlock.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="594,904.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_55">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,812.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_54">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <umab:ExchangeApplicationCard ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" SharedMailbox="{x:Null}" Account="2101000D@student.tp.edu.sg" DisplayName="Use Outlook 365" EmailAddress="2101000D@student.tp.edu.sg" sap:VirtualizedContainerService.HintSize="510,720.666666666667" sap2010:WorkflowViewState.IdRef="ExchangeApplicationCard_4" UseConnectionService="False">
                              <umab:ExchangeApplicationCard.ApplicationId>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </umab:ExchangeApplicationCard.ApplicationId>
                              <umab:ExchangeApplicationCard.Body>
                                <ActivityAction x:TypeArguments="um:IMailQuickHandle">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Exchange" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,491.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <umab:SendMailX Bcc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Exchange]" Body="[emailTranslatedContent]" BodyType="Text" Cc="[ccEmailAddress]" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,399.333333333333" sap2010:WorkflowViewState.IdRef="SendMailX_8" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="[emailSubject]" To="[emailAddress]" UseDocumentAsBody="False">
                                      <umab:SendMailX.Files>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                          <InArgument x:TypeArguments="x:String">[excelAttach]</InArgument>
                                        </scg:List>
                                      </umab:SendMailX.Files>
                                      <umab:SendMailX.HtmlBodyFromFile>
                                        <umabh:HtmlContentArgument FilePath="{x:Null}">
                                          <umabh:HtmlContentArgument.RuntimeImages>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                          </umabh:HtmlContentArgument.RuntimeImages>
                                          <umabh:HtmlContentArgument.ValueMappings>
                                            <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                                          </umabh:HtmlContentArgument.ValueMappings>
                                        </umabh:HtmlContentArgument>
                                      </umab:SendMailX.HtmlBodyFromFile>
                                    </umab:SendMailX>
                                  </Sequence>
                                </ActivityAction>
                              </umab:ExchangeApplicationCard.Body>
                              <umab:ExchangeApplicationCard.TenantId>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </umab:ExchangeApplicationCard.TenantId>
                            </umab:ExchangeApplicationCard>
                          </Sequence>
                        </Sequence>
                      </ui:IfElseIfBlock.Then>
                    </ui:IfElseIfBlock>
                  </sc:BindingList>
                </ui:IfElseIf.ConditionBlocks>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:IfElseIf>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">170,852.666666666667</av:Point>
                      <av:Size x:Key="ShapeSize">200,114.666666666667</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" sap2010:Annotation.AnnotationText="A confirmation message to let user know that the email is sent out." AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="200,114.666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_13" Text="[&quot;Email is successfully sent.&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MessageBox>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <FlowStep x:Name="__ReferenceID4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">170,136</av:Point>
          <av:Size x:Key="ShapeSize">200,148</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">270,284 270,344.333333333333</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Retrieve necessary information from invoices in PDF format and convert into Excel file." DisplayName="Document Understanding" sap:VirtualizedContainerService.HintSize="801.333333333333,3812" sap2010:WorkflowViewState.IdRef="Sequence_56">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Robopro Invoices Document Understanding" sap:VirtualizedContainerService.HintSize="759.333333333333,3689.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_69">
          <Sequence.Variables>
            <Variable x:TypeArguments="p8:DocumentTaxonomy" Name="taxonomy" />
            <Variable x:TypeArguments="sd1:DataTable" Name="InvoiceInfoDataTable" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DataTable="[invoiceInfoDataTable]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="717.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_Number&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:dateTime&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Customer_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Total_x0020_Amount_x0020__x0028__x0024__x0029_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Quantity_x0020__x0028_hours_x0029_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;File_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="717.333333333333,106.666666666667" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy]" />
          <ui:ForEachFileX DisplayName="For Each File in RoboPro Invoices" Filter="*.pdf" Folder="C:\Users\liou\Documents\TP year 2 sem 2\INAUTO\Project\100_Invoices" sap:VirtualizedContainerService.HintSize="717.333333333333,3352" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="True" OrderBy="NameAscFirst">
            <ui:ForEachFileX.Body>
              <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                <ActivityAction.Argument1>
                  <DelegateInArgument x:TypeArguments="si:FileInfo" Name="file" />
                </ActivityAction.Argument1>
                <ActivityAction.Argument2>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                </ActivityAction.Argument2>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="683.333333333333,3113.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_68">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="docText" />
                    <Variable x:TypeArguments="p4:Document" Name="dom" />
                    <Variable x:TypeArguments="x:String" Default="p+PkegOZrKGDx55ovLENjW2XR8bn+3ZgMeAj/29fvBfi+1ubrfrpuRbQ+XVwT8jwQXeCTH3Qb6nDeua5HWIagA==" Name="APIKey" />
                    <Variable x:TypeArguments="x:String" Default="https://du.uipath.com/ocr" Name="OCREndpoint" />
                    <Variable x:TypeArguments="p6:ClassificationResult[]" Name="classificationResults" />
                    <Variable x:TypeArguments="p6:ExtractionResult" Name="extractedResults" />
                    <Variable x:TypeArguments="sd1:DataSet" Name="extractedDataset" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message For Current Processed File" sap:VirtualizedContainerService.HintSize="641.333333333333,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Currently Processing Invoice &quot; + file.FullName]" />
                  <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document" DocumentObjectModel="[dom]" DocumentPath="[file.FullName]" DocumentText="[docText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="641.333333333333,302.666666666667" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                    <p:DigitizeDocument.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument1>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument1>
                        <ActivityFunc.Argument2>
                          <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                        </ActivityFunc.Argument2>
                        <p1:UiPathDocumentOCR Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="[APIKey]" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" Endpoint="[OCREndpoint]" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Image="[Image]" Language="auto" PredictionId="[PredictionId]" Profile="None" Scale="1" Timeout="100000" />
                      </ActivityFunc>
                    </p:DigitizeDocument.OCREngine>
                  </p:DigitizeDocument>
                  <p2:ClassifyDocumentScope ClassificationResults="[classificationResults]" DisplayName="Classify Document Scope" DocumentObjectModel="[dom]" DocumentPath="[file.FullName]" DocumentText="[docText]" sap:VirtualizedContainerService.HintSize="641.333333333333,547.333333333333" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI894d165193ab4ca6a13b257e27ce181b&quot;:{&quot;DocumentTypeMappings&quot;:{}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI894d165193ab4ca6a13b257e27ce181b&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI894d165193ab4ca6a13b257e27ce181b&quot;:[]}}">
                    <p2:ClassifyDocumentScope.Classifiers>
                      <p2:IntelligentKeywordClassifier LearningData="{x:Null}" TimeoutMs="{x:Null}" ApiKey="[APIKey]" DisplayName="Intelligent Keyword Classifier" Endpoint="https://du.uipath.com/svc/intelligentkeywords" sap:VirtualizedContainerService.HintSize="234,214.666666666667" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_1" LearningFilePath="DocumentProcessing\classifierLearning.json" PersistenceId="UI894d165193ab4ca6a13b257e27ce181b">
                        <p2:IntelligentKeywordClassifier.ClassifierResult>
                          <OutArgument x:TypeArguments="p3:ClassifierResult">
                            <DelegateArgumentReference x:TypeArguments="p3:ClassifierResult">
                              <DelegateOutArgument x:TypeArguments="p3:ClassifierResult" Name="ClassifierResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p2:IntelligentKeywordClassifier.ClassifierResult>
                        <p2:IntelligentKeywordClassifier.DocumentObjectModel>
                          <InArgument x:TypeArguments="p4:Document">
                            <DelegateArgumentValue x:TypeArguments="p4:Document">
                              <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.DocumentObjectModel>
                        <p2:IntelligentKeywordClassifier.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.DocumentPath>
                        <p2:IntelligentKeywordClassifier.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.DocumentText>
                        <p2:IntelligentKeywordClassifier.DocumentTypes>
                          <InArgument x:TypeArguments="p3:ClassifierDocumentType[]">
                            <DelegateArgumentValue x:TypeArguments="p3:ClassifierDocumentType[]">
                              <DelegateInArgument x:TypeArguments="p3:ClassifierDocumentType[]" Name="DocumentTypes" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.DocumentTypes>
                        <p2:IntelligentKeywordClassifier.PredictionId>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.PredictionId>
                      </p2:IntelligentKeywordClassifier>
                    </p2:ClassifyDocumentScope.Classifiers>
                  </p2:ClassifyDocumentScope>
                  <p5:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[classificationResults(0)]" DisplayName="Data Extraction Scope" DocumentObjectModel="[dom]" DocumentPath="[file.FullName]" DocumentText="[docText]" ExtractionResult="[extractedResults]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="641.333333333333,497.333333333333" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIaeef07b510274ebb84fd9e3835b68b92&quot;:{&quot;DocumentTypeMappings&quot;:{}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIaeef07b510274ebb84fd9e3835b68b92&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIaeef07b510274ebb84fd9e3835b68b92&quot;:[]}}">
                    <p5:DataExtractionScope.Extractors>
                      <p5:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="[APIKey]" DisplayName="Form Extractor" Endpoint="https://du.uipath.com/svc/formextractor" sap:VirtualizedContainerService.HintSize="234,164.666666666667" sap2010:WorkflowViewState.IdRef="FormExtractor_1" MinOverlapPercentage="65" PersistenceId="UIaeef07b510274ebb84fd9e3835b68b92" SerializedSettings="{}{&quot;DocTypeSettings&quot;:[{&quot;DocumentTypeId&quot;:&quot;NoGroup.NoCategory.Invoice&quot;,&quot;SignatureFields&quot;:[],&quot;HandwritingFields&quot;:[],&quot;BooleanSynonymsForYes&quot;:[],&quot;BooleanSynonymsForNo&quot;:[],&quot;CaseSensitiveSynonyms&quot;:false},{&quot;DocumentTypeId&quot;:&quot;NoGroup.NoCategory.W-9Form&quot;,&quot;SignatureFields&quot;:[{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.W-9Form.Signature&quot;}],&quot;HandwritingFields&quot;:[],&quot;BooleanSynonymsForYes&quot;:[],&quot;BooleanSynonymsForNo&quot;:[],&quot;CaseSensitiveSynonyms&quot;:false}]}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;NoGroup.NoCategory.W-9Form&quot;,&quot;FormId&quot;:&quot;a69b9f5b&quot;,&quot;FormName&quot;:&quot;W-9&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:-0.1,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;IRS.&quot;,&quot;Box&quot;:[9.33,521.87,18.13,8.27]},{&quot;Text&quot;:&quot;www.irs.gov/FormW9&quot;,&quot;Box&quot;:[17.6,184.0,81.07,9.07]},{&quot;Text&quot;:&quot;Taxpayer&quot;,&quot;Box&quot;:[252.0,78.67,44.8,10.4]},{&quot;Text&quot;:&quot;Certification&quot;,&quot;Box&quot;:[345.33,79.2,58.4,9.33]},{&quot;Text&quot;:&quot;W-9&quot;,&quot;Box&quot;:[684.8,485.6,20.27,9.33]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;NoGroup.NoCategory.W-9Form.PersonName&quot;,&quot;Box&quot;:[36.6572,48.178,495.3953,14.6629]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.W-9Form.BusinessName&quot;,&quot;Box&quot;:[61.7935,49.2253,492.2532,14.6629]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.W-9Form.Address&quot;,&quot;Box&quot;:[187.4752,45.0359,322.583,18.8523]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.W-9Form.Signature&quot;,&quot;Box&quot;:[473.401,114.1609,249.2687,27.231]}],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;NoGroup.NoCategory.RoboproInvoices&quot;,&quot;FormId&quot;:&quot;1f174703&quot;,&quot;FormName&quot;:&quot;Robopro&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,595.0,841.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;robopro&quot;,&quot;Box&quot;:[83.78,81.45,87.22,22.14]},{&quot;Text&quot;:&quot;Johannesburg&quot;,&quot;Box&quot;:[127.25,43.56,58.94,8.78]},{&quot;Text&quot;:&quot;leon@robopro.co&quot;,&quot;Box&quot;:[158.45,43.56,71.54,8.78]},{&quot;Text&quot;:&quot;BILL&quot;,&quot;Box&quot;:[247.1,52.8,18.67,7.88]},{&quot;Text&quot;:&quot;leon@robopro.co]&quot;,&quot;Box&quot;:[718.57,274.81,74.09,8.78]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;NoGroup.NoCategory.RoboproInvoices.InvoiceNumber&quot;,&quot;Box&quot;:[152.7382,314.6406,134.4096,15.2738]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.RoboproInvoices.Date&quot;,&quot;Box&quot;:[154.7747,453.1232,95.7159,13.2373]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.RoboproInvoices.CustomerName&quot;,&quot;Box&quot;:[260.6731,41.7484,207.7239,13.2373]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.RoboproInvoices.Total&quot;,&quot;Box&quot;:[608.9161,379.8089,169.0302,21.3833]}],&quot;Tables&quot;:[{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.RoboproInvoices.Items&quot;,&quot;Headers&quot;:[{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.RoboproInvoices.Items.Description&quot;,&quot;Box&quot;:[361.4803,43.7849,263.7279,15.2738]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.RoboproInvoices.Items.Qty(Hours)&quot;,&quot;Box&quot;:[362.4985,318.7136,59.0588,15.2738]}],&quot;Cells&quot;:[{&quot;Row&quot;:0,&quot;Column&quot;:0,&quot;Box&quot;:[380.8271,43.7849,269.8374,12.2191]},{&quot;Row&quot;:0,&quot;Column&quot;:1,&quot;Box&quot;:[381.8454,318.7136,57.0222,11.2008]},{&quot;Row&quot;:1,&quot;Column&quot;:0,&quot;Box&quot;:[393.0462,44.8032,266.7826,12.2191]},{&quot;Row&quot;:1,&quot;Column&quot;:1,&quot;Box&quot;:[391.0097,316.6771,62.1135,14.2556]}]}]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}}]" Timeout="100000">
                        <p5:FormExtractor.DocumentBounds>
                          <InArgument x:TypeArguments="p6:ResultsDocumentBounds">
                            <DelegateArgumentValue x:TypeArguments="p6:ResultsDocumentBounds">
                              <DelegateInArgument x:TypeArguments="p6:ResultsDocumentBounds" Name="DocumentBounds" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p5:FormExtractor.DocumentBounds>
                        <p5:FormExtractor.DocumentObjectModel>
                          <InArgument x:TypeArguments="p4:Document">
                            <DelegateArgumentValue x:TypeArguments="p4:Document">
                              <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p5:FormExtractor.DocumentObjectModel>
                        <p5:FormExtractor.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p5:FormExtractor.DocumentPath>
                        <p5:FormExtractor.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p5:FormExtractor.DocumentText>
                        <p5:FormExtractor.ExtractorDocumentType>
                          <InArgument x:TypeArguments="p7:ExtractorDocumentType">
                            <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                              <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p5:FormExtractor.ExtractorDocumentType>
                        <p5:FormExtractor.ExtractorResult>
                          <OutArgument x:TypeArguments="p7:ExtractorResult">
                            <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                              <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p5:FormExtractor.ExtractorResult>
                        <p5:FormExtractor.PredictionId>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p5:FormExtractor.PredictionId>
                      </p5:FormExtractor>
                    </p5:DataExtractionScope.Extractors>
                  </p5:DataExtractionScope>
                  <p5:ExportExtractionResults DataSet="[extractedDataset]" DisplayName="Export Extraction Results" ExtractionResult="[extractedResults]" sap:VirtualizedContainerService.HintSize="641.333333333333,180.666666666667" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False" />
                  <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each Table In Extracted Dataset" sap:VirtualizedContainerService.HintSize="641.333333333333,1198.66666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[extractedDataset.Tables]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sd1:DataTable">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="table" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="604.666666666667,1074" sap2010:WorkflowViewState.IdRef="Sequence_67">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="InvoiceNumber" />
                            <Variable x:TypeArguments="x:String" Name="InvoiceDescription" />
                            <Variable x:TypeArguments="x:Int32" Name="InvoiceHours" />
                            <Variable x:TypeArguments="s:DateTime" Name="InvoiceDate" />
                            <Variable x:TypeArguments="x:String" Name="CustomerName" />
                            <Variable x:TypeArguments="x:Int32" Name="TotalAmount" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CommentOut DisplayName="Uncomment This To See Error Handling Being Operated For Invalid Column" sap:VirtualizedContainerService.HintSize="562.666666666667,644" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignore Removing Data Column For Simple Fields DataTable" sap:VirtualizedContainerService.HintSize="526,565.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(table.TableName,&quot;^Simple Fields$&quot;)]" DisplayName="If Simple Fields DataTable Exists" sap:VirtualizedContainerService.HintSize="484,473.333333333333" sap2010:WorkflowViewState.IdRef="If_10">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,282" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DataTable="[table]" DisplayName="Remove Data Column For InvoiceNumber " sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_58">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ui:CommentOut.Body>
                          </ui:CommentOut>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="562.666666666667,298" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <TryCatch.Try>
                              <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(table.TableName,&quot;^Simple Fields$&quot;)]" DisplayName="If Simple Fields DataTable Exists" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="782.666666666667,2172" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[table]" DisplayName="For Each Row in Data Table From Extracted Dataset" sap:VirtualizedContainerService.HintSize="740.666666666667,2080" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd1:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="tableRow" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="706.666666666667,1956" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MultipleAssign DisplayName="Assign Each Variable Values According To Table Row" sap:VirtualizedContainerService.HintSize="664.666666666667,191.333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                              <ui:MultipleAssign.AssignOperations>
                                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[InvoiceNumber]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(tableRow(0))]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="s:DateTime">[InvoiceDate]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(tableRow(1))]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:String">[CustomerName]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:String">[tableRow(2).ToString]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[TotalAmount]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(String.Join("",tableRow(3).ToString.Split(","c)(0).Split(" "c)))]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                </scg:List>
                                              </ui:MultipleAssign.AssignOperations>
                                            </ui:MultipleAssign>
                                            <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each Table In Extracted Dataset" sap:VirtualizedContainerService.HintSize="664.666666666667,913.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[extractedDataset.Tables]">
                                              <ui:ForEach.Body>
                                                <ActivityAction x:TypeArguments="sd1:DataTable">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="table" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="628,785.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(table.TableName,&quot;^Items$&quot;)]" DisplayName="If Items DataTable Exists" sap:VirtualizedContainerService.HintSize="586,693.333333333333" sap2010:WorkflowViewState.IdRef="If_11">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="549.333333333333,498.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[table]" DisplayName="For Each Row in Data Table From Extracted Dataset" sap:VirtualizedContainerService.HintSize="507.333333333333,344.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                                            <ui:ForEachRow.Body>
                                                              <ActivityAction x:TypeArguments="sd1:DataRow">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="tableRow" />
                                                                </ActivityAction.Argument>
                                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="473.333333333333,222" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:MultipleAssign DisplayName="Assign Each Variable Values According To Table Row" sap:VirtualizedContainerService.HintSize="431.333333333333,130" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                                                    <ui:MultipleAssign.AssignOperations>
                                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                                                          <ui:AssignOperation.To>
                                                                            <OutArgument x:TypeArguments="x:String">[InvoiceDescription]</OutArgument>
                                                                          </ui:AssignOperation.To>
                                                                          <ui:AssignOperation.Value>
                                                                            <InArgument x:TypeArguments="x:String">[tableRow(0).ToString]</InArgument>
                                                                          </ui:AssignOperation.Value>
                                                                        </ui:AssignOperation>
                                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                                                          <ui:AssignOperation.To>
                                                                            <OutArgument x:TypeArguments="x:Int32">[InvoiceHours]</OutArgument>
                                                                          </ui:AssignOperation.To>
                                                                          <ui:AssignOperation.Value>
                                                                            <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(tableRow(1))]</InArgument>
                                                                          </ui:AssignOperation.Value>
                                                                        </ui:AssignOperation>
                                                                      </scg:List>
                                                                    </ui:MultipleAssign.AssignOperations>
                                                                  </ui:MultipleAssign>
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ui:ForEachRow.Body>
                                                          </ui:ForEachRow>
                                                          <ui:Break sap:VirtualizedContainerService.HintSize="507.333333333333,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEach.Body>
                                            </ui:ForEach>
                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{InvoiceNumber, InvoiceDate, CustomerName, TotalAmount, InvoiceDescription, InvoiceHours, file.Name, &quot;Success&quot;}]" DataTable="[InvoiceInfoDataTable]" DisplayName="Add Data Row To InvoiceInfoDataTable" sap:VirtualizedContainerService.HintSize="664.666666666667,188" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[invoiceInfoDataTable]" DisplayName="Input Data From InvoiceInfoDataTable Into Excel Sheet" sap:VirtualizedContainerService.HintSize="664.666666666667,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[&quot;Extraction\Converted_&quot;+file.Name.Split(&quot;.&quot;c)(0)+&quot;.xlsx&quot;]" />
                                            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="False" DataTable="[table]" DisplayName="Input Data From Extracted Dataset Table Into Excel Sheet" sap:VirtualizedContainerService.HintSize="664.666666666667,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[table.TableName]" WorkbookPath="[&quot;Extraction\Without Conversion_&quot;+file.Name.Split(&quot;.&quot;c)(0)+&quot;.xlsx&quot;]" />
                                            <ui:ClearDataTable DataTable="[InvoiceInfoDataTable]" DisplayName="Clear InvoiceInfoDataTable" sap:VirtualizedContainerService.HintSize="664.666666666667,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
                                            <ui:Break sap:VirtualizedContainerService.HintSize="664.666666666667,22" sap2010:WorkflowViewState.IdRef="Break_2" />
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                    </ui:ForEachRow>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,846.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message For Error While Processing Any File" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Error occured while processing &quot; + file.Name + vbCr + exception.Message]" />
                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, file.Name, &quot;Error occured while processing &quot; + file.Name + vbCr + exception.Message}]" DataTable="[InvoiceInfoDataTable]" DisplayName="Add Data Row To InvoiceInfoDataTable" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[invoiceInfoDataTable]" DisplayName="Input Data From InvoiceInfoDataTable Into Excel Sheet" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Sheet1" WorkbookPath="[&quot;Extraction\Converted_&quot;+file.Name.Split(&quot;.&quot;c)(0)+&quot;.xlsx&quot;]" />
                                    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="False" DataTable="[table]" DisplayName="Input Data From Extracted Dataset Table Into Excel Sheet" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="[table.TableName]" WorkbookPath="[&quot;Extraction\Without Conversion_&quot;+file.Name.Split(&quot;.&quot;c)(0)+&quot;.xlsx&quot;]" />
                                    <ui:ClearDataTable DataTable="[InvoiceInfoDataTable]" DisplayName="Clear InvoiceInfoDataTable" sap:VirtualizedContainerService.HintSize="334,80.6666666666667" sap2010:WorkflowViewState.IdRef="ClearDataTable_2" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </ui:ForEachFileX.Body>
          </ui:ForEachFileX>
        </Sequence>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID3</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>